NAME
    Geo::Hex - GeoHex decoder/encoder

INSTALLATION
  To install this module, run the following commands:

    perl Makefile.PL
    make
    make test
    make install

SYNOPSIS
        use Geo::Hex;
    
        # OO-style
        my $geohex = Geo::Hex->new( version => 3 ); # v3 by default
    
        my ($lat, $lon, $level) = $geohex->decode( 'XM4885487' );
        my $code                = $geohex->encode( $lat, $lon, $level );
        # => XM4885487
    
        my $zone = $geohex->to_zone( 'XM4885487' );
           $zone = $geohex->to_zone( $lat, $lon, $level );
    
        # * zone object: hash value
        # $zone->code  : GeoHex code
        # $zone->level : Level
        # $zone->lat   : Latirude of given GeoHex's center point
        # $zone->lon   : Longitude of given GeoHex's center point
        # $zone->x     : Mercator X coordinate of given GeoHex's center point 
        # $zone->y     : Mercator Y coordinate of given GeoHex's center point 
    
        $geohex->spec_version; # => 3
    
    
        # Export function - GeoHex v3 by default
        ($lat, $lon, $level) = decode_geohex( $code );
        $code = encode_geohex( $lat, $lon, $level );
    
    
        # Explicit export function
        use Geo::Hex v => 3, qw(latlng2geohex geohex2latlng);
    
        # From latitude/longitude to hex code
        $code = latlng2geohex( $lat, $lng, $level );
            # From hex code to center latitude/longitude
        my ( $center_lat, $center_lng, $level ) = geohex2latlng( $code );
    
    
        # Explicit export function - original javascript name
        use Geo::Hex v => 3, qw(getZoneByLocation getZoneByCode);
        # From latitude/longitude to zone object*
        $zone = getZoneByLocation( $lat, $lng, $level );
        # From hex code to zone object*
        $zone = getZoneByCode( $code );

CLASS METHODS
  new
        $geohex = Geo::Hex->new( %option );

    Creates a new Geo::Hex::Coder object. It can take options:

    version
        The GeoHex specification vresion.

    v   The synonym to "version" option.

  spec_version
    Returns specification version.

INSTANCE METHODS
  decode
        ( $lat, $lon, $level ) = $geohex->decode( $code );

  encode
        $code = $geohex->encode( $lat, $lon, $level );

  to_zone
        $zone = $geohex->to_zone( $code );
    
        $zone = $geohex->to_zone( $lat, $lon, $level );

  spec_version
EXPORT FUNCTIONS
  decode_geohex
        ($lat, $lon, $level) = decode_geohex( $code );

  encode_geohex
        $code = encode_geohex( $lat, $lon, $level );

FUNCTIONS
  latlng2geohex
        latlng2geohex( $lat, $lng, $level );
    
        latlng2geohex( $zone );

    Convert latitude/longitude to GeoHex code.

  geohex2latlng
        geohex2latlng( $code );

    Convert GeoHex code to center latitude/longitude, and level value.

SEE ALSO
    <http://geogames.net/geohex/v3>

    Geo::Hex::Zone, Geo::Hex1, Geo::Hex2, Geo::Hex3

AUTHOR
    Makamaka Hannyaharamitu

LICENCE AND COPYRIGHT
    GeoHex by @sa2da (http://geogames.net) is licensed under Creative
    Commons BY-SA 2.1 Japan License.

    Copyright 2011 Makamaka Hannyaharamitu

    This library is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

